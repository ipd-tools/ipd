% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ppi_plusplus_mean.R
\name{ppi_plusplus_mean}
\alias{ppi_plusplus_mean}
\title{PPI++ Mean Estimation}
\usage{
ppi_plusplus_mean(
  Y_l,
  f_l,
  f_u,
  alpha = 0.05,
  alternative = "two-sided",
  lhat = NULL,
  coord = NULL,
  w_l = NULL,
  w_u = NULL
)
}
\arguments{
\item{Y_l}{(vector): n-vector of labeled outcomes.}

\item{f_l}{(vector): n-vector of predictions in the labeled data.}

\item{f_u}{(vector): N-vector of predictions in the unlabeled data.}

\item{alpha}{(scalar): type I error rate for hypothesis testing - values in
(0, 1); defaults to 0.05.}

\item{alternative}{(string): Alternative hypothesis. Must be one of
\code{"two-sided"}, \code{"less"}, or \code{"greater"}.}

\item{lhat}{(float, optional): Power-tuning parameter (see
\url{https://arxiv.org/abs/2311.01453}). The default value, \code{NULL},
will estimate the optimal value from the data. Setting \code{lhat = 1}
recovers PPI with no power tuning, and setting \code{lhat = 0} recovers
the classical point estimate.}

\item{coord}{(int, optional): Coordinate for which to optimize
\code{lhat = 1}. If \code{NULL}, it optimizes the total variance over all
coordinates. Must be in (1, ..., d) where d is the dimension of the estimand.}

\item{w_l}{(ndarray, optional): Sample weights for the labeled data set.
Defaults to a vector of ones.}

\item{w_u}{(ndarray, optional): Sample weights for the unlabeled
data set. Defaults to a vector of ones.}
}
\value{
tuple: Lower and upper bounds of the prediction-powered confidence
interval for the mean.
}
\description{
Helper function for PPI++ mean estimation
}
\details{
PPI++: Efficient Prediction Powered Inference (Angelopoulos et al., 2023)
\url{https://arxiv.org/abs/2311.01453}`
}
\examples{

dat <- simdat(model = "mean")

form <- Y - f ~ 1

Y_l <- dat[dat$set_label == "labeled",   all.vars(form)[1]] |> matrix(ncol = 1)

f_l <- dat[dat$set_label == "labeled",   all.vars(form)[2]] |> matrix(ncol = 1)

f_u <- dat[dat$set_label == "unlabeled", all.vars(form)[2]] |> matrix(ncol = 1)

ppi_plusplus_mean(Y_l, f_l, f_u)

}
